#!/bin/bash
#
# Runs programs and sets environment variables on X server startup.

main() {
    setXConfigurations
    runInitrcScripts
    startDaemons
    setBackgroundImage
    startWindowManager
}

setXConfigurations() {
    setXresources
    setXmodmap
    setXSessionLock
}

setXresources() {
    local sysresources="/etc/X11/xinit/.Xresources"
    local userresources="${HOME}/.config/X11/Xresources"

    if regularFileExists "${sysresources}"; then
        xrdb -merge "${sysresources}"
    fi
    if regularFileExists "${userresources}"; then
        xrdb -merge "${userresources}"
    fi
}

setXmodmap() {
    local sysmodmap="/etc/X11/xinit/.Xmodmap"
    local usermodmap="${HOME}/.config/X11/Xmodmap"

    if regularFileExists "${sysmodmap}"; then
        xmodmap "${sysmodmap}"
    fi
    if regularFileExists "${usermodmap}"; then
        xmodmap "${usermodmap}"
    fi
}

regularFileExists() {
    local file="${1}"
    [ -f "${file}" ]
}

setXSessionLock() {
    local dimTimeInSeconds="600"
    local lockTimeInSeconds="60"
    # Set dim and lock screen time on inactivity, and disable X screensaver
    xset s "${dimTimeInSeconds}" "${lockTimeInSeconds}" -dpms
}

runInitrcScripts() {
    local xinitrcd="/etc/X11/xinit/xinitrc.d/"
    if directoryExists "${xinitrcd}"; then
        for script in "${xinitrcd}"/?*.sh; do
            if isExecutable "${script}"; then
                source "${script}"
            fi
        done
        unset script
    fi
}

directoryExists() {
    local directory="${1}"
    [ -d "${directory}" ]
}

isExecutable() {
    local file="${1}"
    [ -x "${file}" ]
}

startDaemons() {
    dunst &                                                    # Notifications
    dwmblocks &                                                # Status bar
    picom --no-fading-openclose &                              # Compositor
    xss-lock --notifier=dim --transfer-sleep-lock -- lock &    # Screen locker
}

setBackgroundImage() {
    backgroundImageDirectory="$HOME/.local/share/backgrounds/homescreens/"
    if directoryExists "${backgroundImageDirectory}"; then
        randomBackgroundImage="$(getRandomBackgroundImage \
                "${backgroundImageDirectory}")"
        if regularFileExists "${randomBackgroundImage}"; then
            feh --bg-scale --no-fehbg "${randomBackgroundImage}"
        fi
    fi
}

getRandomBackgroundImage() {
    directory="${1}"
    find "${backgroundImageDirectory}" -type "f" | shuf --head-count="1"
}

startWindowManager() {
    dwm
}

main
