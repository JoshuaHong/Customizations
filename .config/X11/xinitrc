#!/bin/bash

# Runs programs and sets environment variables on X server startup

main() {
    setXConfigurations
    runInitrcScripts
    startDaemons
    setBackgroundImage
    startWindowManager
}

setXConfigurations() {
    setXresources
    setXmodmap
    setXSessionLock
}

setXresources() {
    local sysresources="/etc/X11/xinit/.Xresources"
    local userresources="${HOME}/.config/X11/Xresources"

    if fileExists "${sysresources}"; then
        xrdb -merge "${sysresources}"
    fi
    if fileExists "${userresources}"; then
        xrdb -merge "${userresources}"
    fi
}

setXmodmap() {
    local sysmodmap="/etc/X11/xinit/.Xmodmap"
    local usermodmap="${HOME}/.config/X11/Xmodmap"

    if fileExists "${sysmodmap}"; then
        xmodmap "${sysmodmap}"
    fi
    if fileExists "${usermodmap}"; then
        xmodmap "${usermodmap}"
    fi
}

fileExists() {
    local file="${1}"
    [ -f "${file}" ]
}

setXSessionLock() {
    local dimTimeInSeconds="600"
    local lockTimeInSeconds="60"
    # Set dim and lock screen time on inactivity, and disable X screensaver
    xset s "${dimTimeInSeconds}" "${lockTimeInSeconds}" -dpms
}

runInitrcScripts() {
    local xinitrcd="/etc/X11/xinit/xinitrc.d/"
    if directoryExists "${xinitrcd}"; then
        for script in "${xinitrcd}"/?*.sh; do
            if isExecutable "${script}"; then
                . "${script}"
            fi
        done
        unset script
    fi
}

directoryExists() {
    local directory="${1}"
    [ -d "${directory}" ]
}

isExecutable() {
    local file="${1}"
    [ -x "${file}" ]
}

startDaemons() {
    picom &                              # Compositor
    xss-lock --notifier=dim -- lock &    # Dim and lock screen on inactivity
    dwmblocks &                          # Status bar
    nm-applet &                          # Network manager applet
}

setBackgroundImage() {
    randomBackgroundImage="$(find \
            "$HOME/.local/share/backgrounds/homescreens/" -type "f" \
            | shuf --head-count="1")"

    if fileExists "${randomBackgroundImage}"; then
        feh --bg-scale --no-fehbg "${randomBackgroundImage}"
    fi
}

startWindowManager() {
    while true; do
        dwm
    done
}

main
